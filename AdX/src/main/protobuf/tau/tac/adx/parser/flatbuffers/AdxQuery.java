// automatically generated by the FlatBuffers compiler, do not modify

package tau.tac.adx.parser.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AdxQuery extends Table {
  public static AdxQuery getRootAsAdxQuery(ByteBuffer _bb) { return getRootAsAdxQuery(_bb, new AdxQuery()); }
  public static AdxQuery getRootAsAdxQuery(ByteBuffer _bb, AdxQuery obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public AdxQuery __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String publisher() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer publisherAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public byte marketSegments(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int marketSegmentsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer marketSegmentsAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public byte device() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte adtype() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createAdxQuery(FlatBufferBuilder builder,
      int publisherOffset,
      int marketSegmentsOffset,
      byte device,
      byte adtype) {
    builder.startObject(4);
    AdxQuery.addMarketSegments(builder, marketSegmentsOffset);
    AdxQuery.addPublisher(builder, publisherOffset);
    AdxQuery.addAdtype(builder, adtype);
    AdxQuery.addDevice(builder, device);
    return AdxQuery.endAdxQuery(builder);
  }

  public static void startAdxQuery(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addPublisher(FlatBufferBuilder builder, int publisherOffset) { builder.addOffset(0, publisherOffset, 0); }
  public static void addMarketSegments(FlatBufferBuilder builder, int marketSegmentsOffset) { builder.addOffset(1, marketSegmentsOffset, 0); }
  public static int createMarketSegmentsVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startMarketSegmentsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addDevice(FlatBufferBuilder builder, byte device) { builder.addByte(2, device, 0); }
  public static void addAdtype(FlatBufferBuilder builder, byte adtype) { builder.addByte(3, adtype, 0); }
  public static int endAdxQuery(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

