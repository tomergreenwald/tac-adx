// automatically generated by the FlatBuffers compiler, do not modify

package tau.tac.adx.parser.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class AdxBidList extends Table {
  public static AdxBidList getRootAsAdxBidList(ByteBuffer _bb) { return getRootAsAdxBidList(_bb, new AdxBidList()); }
  public static AdxBidList getRootAsAdxBidList(ByteBuffer _bb, AdxBidList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public AdxBidList __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public AdxBidEntry entries(int j) { return entries(new AdxBidEntry(), j); }
  public AdxBidEntry entries(AdxBidEntry obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int entriesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createAdxBidList(FlatBufferBuilder builder,
      int entriesOffset) {
    builder.startObject(1);
    AdxBidList.addEntries(builder, entriesOffset);
    return AdxBidList.endAdxBidList(builder);
  }

  public static void startAdxBidList(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addEntries(FlatBufferBuilder builder, int entriesOffset) { builder.addOffset(0, entriesOffset, 0); }
  public static int createEntriesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startEntriesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAdxBidList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

